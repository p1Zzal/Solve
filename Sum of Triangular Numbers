7kyu
Sum of Triangular Numbers

Your task is to return the sum of Triangular Numbers up-to-and-including the nth Triangular Number.

Triangular Number: "any of the series of numbers (1, 3, 6, 10, 15, etc.) obtained by continued summation of the natural numbers 1, 2, 3, 4, 5, etc."

[01]
02 [03]
04 05 [06]
07 08 09 [10]
11 12 13 14 [15]
16 17 18 19 20 [21]

e.g. If 4 is given: 1 + 3 + 6 + 10 = 20.

Triangular Numbers cannot be negative so return 0 if a negative number is given.

하나씩 점점 커지는 숫자의 삼각형을 만들어서 맨 끝에있는 숫자를 더한 값을 반환하면된다.
설명은 어려웠지만 문제를 직접 풀어보니 쉬웠다.


///

아래와 같이 for문을 써서 result에다가 값을 더해줬다.
맨 끝의 수는 n번 반복하는 값을 더한값이기에 아래 처럼 했다.

(0, 0+1, 0+1+2, 0+1+2+3 ...)

function sumTriangularNumbers(n) {
  let result = 0;
  for(let i=1; i<=n+1; i++){
    for(let j=0; j<i; j++){
      result+=j
    }
  }
  
  return result
}
