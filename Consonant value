6kyu
Consonant value


Given a lowercase string that has alphabetic characters only and no spaces, return the highest value of consonant substrings.
Consonants are any letters of the alphabet except "aeiou".

We shall assign the following values: a = 1, b = 2, c = 3, .... z = 26.

For example, for the word "zodiacs", let's cross out the vowels. We get: "z d cs"

-- The consonant substrings are: "z", "d" and "cs" and the values are z = 26, d = 4 and cs = 3 + 19 = 22. The highest is 26.
solve("zodiacs") = 26

For the word "strength", solve("strength") = 57
-- The consonant substrings are: "str" and "ngth" with values "str" = 19 + 20 + 18 = 57 and "ngth" = 14 + 7 + 20 + 8 = 49. The highest is 57.
For C: do not mutate input.

More examples in test cases. Good luck

소문자만 있는 문자열 s 가 매개변수로 주어진다.
모음은 빼고 자음문자열 중 가장 높은 수를 반환하면된다.
zodiacs 에서 모음을 지우면
z d cs 가 된다.
여기서 가장높은 수는 26이다.

///

매개변수 s 를 모음기준으로 split 한 다음 map으로 split 한 문자열을 다시한번 짤라서 reduce 함수로 더해준 후 Math.max 함수로 가장 높은수를 반환했다.
한 줄로써서 가독성이 좋지않다.

function solve(s) {
  return Math.max(...s.split(/[aeiou]/).map(a => [...a].reduce((p,c) => p + (c.charCodeAt() - 96) ,0)))
};


아래와 같이 조금 나눌수있다.

function solve(s) {
  let arrStr = s.split(/[aeiou]/)
  let mapStr = arrStr.map(a => a.split('').reduce((p,c) => p + (c.charCodeAt() - 96),0))
  let result = Math.max(...mapStr)
  return result
};
